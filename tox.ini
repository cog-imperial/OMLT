# Tox configuration file
# Read more under https://tox.readthedocs.org/
# THIS SCRIPT IS SUPPOSED TO BE AN EXAMPLE. MODIFY IT ACCORDING TO YOUR NEEDS!

[tox]
minversion = 3.15
envlist = py36, py37, py38, py39, lint

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38, lint
    3.9: py39

[testenv]
deps = pytest
extras = testing
commands = pytest {posargs}

#[testenv:fullenv]
#description = Testing with full dependencies
#deps = pytest
#extras = testing
#commands = pytest {posargs}

[testenv:leanenv]
description = Testing with fewer dependencies
deps = pytest
extras = testing_lean
commands = pytest {posargs}

[testenv:notebooks]
deps = pytest
extras = testing
commands = pytest --nbmake --cov-append {posargs}

[testenv:{clean,build}]
description =
    Build (or clean) the package in isolation according to instructions in:
    https://setuptools.readthedocs.io/en/latest/build_meta.html#how-to-use-it
    https://github.com/pypa/pep517/issues/91
    https://github.com/pypa/build
# NOTE: build is still experimental, please refer to the links for updates/issues
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    build: python -m build .
# By default `build` produces wheels, you can also explicitly use the flags `--sdist` and `--wheel`


[testenv:{docs,doctests}]
description = invoke sphinx-build to build the docs/run doctests
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/_build
    docs: BUILD = html
    doctests: BUILD = doctest
deps =
    -r {toxinidir}/docs/requirements.txt
    # ^  requirements.txt shared with Read The Docs
commands =
    sphinx-build -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}


[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository testpypi} dist/*

[flake8]
extend-ignore = D, E, F, N
per-file-ignores = __init__.py:F401

[testenv:lint]
description = Lint files using isort, black, and flake8
skip_install = True
changedir = {toxinidir}
deps =
    black
    flake8
    flake8-bugbear
    flake8-docstrings
    isort
    pep8-naming
commands =
    flake8 --config=tox.ini src/omlt tests/
    black --check --diff src/omlt tests

[testenv:format]
description = Format Python files using isort and black
skip_install = true
changedir = {toxinidir}
deps =
    black
    typing-extensions
    isort
commands =
    isort src/omlt tests
    black src/omlt tests
